<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java501.S20230401.model.ArticleMapper">


	<!-- 유현규 -->
	<insert id="hgInsertArticle" parameterType="Article">
		<!-- INSERT INTO ARTICLE (ART_ID, BRD_ID, ART_TITLE, MEM_ID, ART_REGDATE, ART_CONTENT,
							 ART_TAG1, ART_TAG2, ART_TAG3, ART_TAG4, ART_TAG5, TRD_ID, ART_GOOD,
							 ART_BAD, ART_READ, ART_ISNOTICE, ISDELETE, REPORT_ID)
		VALUES ((SELECT MAX(ART_ID) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), #{brd_id},
				#{art_title, jdbcType=VARCHAR}, #{mem_id}, SYSDATE, #{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}, #{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, #{trd_id, jdbcType=NUMERIC},
				0, 0, 0, 0, 0, NULL) -->
		INSERT INTO ARTICLE (ART_ID, BRD_ID, ART_TITLE, MEM_ID, ART_REGDATE, ART_CONTENT,
							 ART_TAG1, ART_TAG2, ART_TAG3, ART_TAG4, ART_TAG5, TRD_ID, ART_GOOD,
							 ART_BAD, ART_READ, ART_ISNOTICE, ISDELETE, REPORT_ID)
		VALUES ((SELECT MAX(ART_ID) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), #{brd_id},
				#{art_title, jdbcType=VARCHAR}, #{mem_id}, SYSDATE, #{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}, #{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, NULL,
				0, 0, 0, 0, 0, NULL)
	</insert>
	<select id="hgGetArticleById" parameterType="Article" resultType="Article">
		SELECT * FROM ARTICLE
		WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</select>
	
	
	
	
	
	<!-- 양동균 -->
	<resultMap type="Article" id="dgArticleMap">
		<id 	column="art_id" 		property="art_id"/> <!-- PK	 -->
		<id 	column="brd_id" 		property="brd_id"/>	<!-- PK -->
		<result column="art_title" 		property="art_title"/>
		<result column="mem_id" 		property="mem_id"/>
		<result column="art_regdate" 	property="art_regdate"/>
		<result column="art_content" 	property="art_content"/>
		<result column="art_tag1" 		property="art_tag1"/>
		<result column="art_tag2" 		property="art_tag2"/>
		<result column="art_tag3" 		property="art_tag3"/>
		<result column="art_tag4" 		property="art_tag4"/>
		<result column="art_tag5" 		property="art_tag5"/>
		<result column="trd_id" 		property="trd_id"/>
		<result column="art_good" 		property="art_good"/>
		<result column="art_bad" 		property="art_bad"/>
		<result column="art_read" 		property="art_read"/>
		<result column="art_isnotice" 	property="art_isnotice"/>
		<result column="isdelete" 		property="isdelete"/>
		<result column="report_id" 		property="report_id"/>
		<result column="gen_name" 		property="gen_name"/>
		<result column="brd_name" 		property="brd_name"/>
		<result column="status_name" 	property="status_name"/>
		<result column="rep_cnt" 		property="rep_cnt"/>
		<collection property="member" 	resultMap="com.java501.S20230401.model.MemberMapper.dgMemberMap"/>
		<collection property="board" 	resultMap="com.java501.S20230401.model.BoardMapper.dgBoardMap"/>
		<collection property="trade" 	resultMap="com.java501.S20230401.model.TradeMapper.dgTradeMap"/>
	</resultMap>
	
	<!-- 전체 카운트 -->
	<select id="dgAllArtCnt" resultType="int" parameterType="Article">
		SELECT 	COUNT(*)
		FROM 	ARTICLE
		WHERE 	BRD_ID 
		<choose>
			<when test="brd_id == 999">
				BETWEEN #{brd_id} and #{brd_id}+600
			</when>
			<when test="brd_id % 100 != 0">
				= #{brd_id}
			</when>
			<otherwise>
				BETWEEN #{brd_id} and #{brd_id}+99
			</otherwise>
		</choose>
		AND		ISDELETE = 0
	</select>

	<!-- 전체 조회 -->
	<select id="dgAllArticleList" resultMap="dgArticleMap" parameterType="Article">
		SELECT  *
		FROM    (SELECT ROWNUM AS RN, J.*
		         FROM   (SELECT *
		                 FROM ( SELECT  *
		                        FROM    ARTICLE A
		                        JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
		                                    FROM    BOARD B JOIN COMM C1
		                                    ON      BRD_ID IN COMM_ID
		                                 )USING(BRD_ID)
		                        JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
		                                    FROM    MEMBER M JOIN COMM C2
		                                    ON      MEM_GENDER IN COMM_ID
		                                 )USING(MEM_ID)
				                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
				                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
				                                        ON      T.TRD_STATUS = C3.COMM_ID
				                                        LEFT OUTER JOIN REGION R
				                                        ON      T.REG_ID = R.REG_ID
				                         )USING(TRD_ID)
		                        LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
		                                                FROM 	REPLY
		                                                WHERE 	ISDELETE = 0
		                                                GROUP BY(ART_ID, BRD_ID)
		                                            )USING(BRD_ID, ART_ID)
                                WHERE 	A.ISDELETE = 0
		                       )
		                 WHERE      BRD_ID <choose>
		                 						<when test="brd_id == 999">
													BETWEEN #{brd_id} and #{brd_id}+600
												</when>
												<when test="brd_id % 100 != 0">
													= #{brd_id}
												</when>
												<otherwise>
													BETWEEN #{brd_id} and #{brd_id}+99
												</otherwise>
											</choose>
		                 ORDER BY   ART_REGDATE DESC) J)
		WHERE 	RN BETWEEN #{start} and #{end}
	</select>

	<!-- 게시글 조회 -->
	<select id="dgDetailShareArticle" resultMap="dgArticleMap" parameterType="Article">
		SELECT  *
		FROM   (SELECT *
		        FROM    ARTICLE A
                JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
                            FROM    BOARD B JOIN COMM C1
                            ON      BRD_ID IN COMM_ID
                        )USING(BRD_ID)
                JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
                            FROM    MEMBER M JOIN COMM C2
                            ON      MEM_GENDER IN COMM_ID
                        )USING(MEM_ID)
                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
                                        ON      T.TRD_STATUS = C3.COMM_ID
                                        LEFT OUTER JOIN REGION R
                                        ON      T.REG_ID = R.REG_ID
                         )USING(TRD_ID)
                LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
                                        FROM 	REPLY
                                        WHERE 	ISDELETE = 0
                                        GROUP BY(ART_ID, BRD_ID)
                                    )USING(BRD_ID, ART_ID)
                WHERE 	A.ISDELETE = 0
		        )
		WHERE   ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="dgReadShareArticle" parameterType="Article">
		UPDATE  ARTICLE
		SET     ART_READ = ART_READ+1
		WHERE   ART_ID = #{art_id}
		AND     BRD_ID = #{brd_id}
	</update>

	<!-- 게시글 작성 프로시저 -->
	<insert id="dgWriteShareArticle" parameterType="Article" statementType="CALLABLE">
		{
			call dgWriteShare(
				#{trade.trd_status,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_max,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_enddate,mode=IN, 	jdbcType=DATE},
				#{trade.trd_cost,	mode=IN, 	jdbcType=INTEGER},
				#{trade.reg_id,	    mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_loc,	mode=IN, 	jdbcType=VARCHAR},
				#{trade.trd_gender,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_minage,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_maxage,	mode=IN, 	jdbcType=INTEGER},
				#{brd_id,	        mode=IN, 	jdbcType=INTEGER},
				#{mem_id,	        mode=IN, 	jdbcType=INTEGER},
				#{art_title,	    mode=IN, 	jdbcType=VARCHAR},
				#{art_content,	    mode=IN, 	jdbcType=CLOB},
				#{art_tag1,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag2,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag3,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag4,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag5,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_good,	        mode=IN, 	jdbcType=INTEGER},
				#{art_bad,	        mode=IN, 	jdbcType=INTEGER},
				#{art_read,	        mode=IN, 	jdbcType=INTEGER},
				#{art_isnotice,	    mode=IN, 	jdbcType=INTEGER},
				#{isdelete,	        mode=IN, 	jdbcType=INTEGER}
			)
		}
	</insert>

	
	
	
	
	
	<!-- 백준 -->
	<select id="bjarticleIndex" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM ARTICLE
		WHERE
		<![CDATA[
			brd_id >= #{brd_id} AND brd_id < #{brd_id} + 100
		]]>
	</select>
	<select id="bjarticlePart" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM ARTICLE
		WHERE brd_id = #{brd_id}
	</select>
	
	<select id="bjarticleIndexAll" parameterType="Article" resultType="Article">
		SELECT *
		FROM (
		    SELECT ROWNUM RN, TEMP.*, M.mem_nickname, M.mem_image
		    FROM (
		        SELECT A.*, NVL(R.REP_CNT, 0) AS REP_CNT
		        FROM ARTICLE A
		        LEFT OUTER JOIN (
		            SELECT ART_ID, BRD_ID, COUNT(*) REP_CNT 
		            FROM REPLY 
		            WHERE BRD_ID BETWEEN 1300 AND 1399
		            GROUP BY ART_ID, BRD_ID
		        ) R ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID) 
		        WHERE A.BRD_ID BETWEEN 1300 AND 1399
		        AND A.isdelete = 0 
		        ORDER BY A.ART_ID DESC
		    ) TEMP
		    INNER JOIN member M ON TEMP.mem_id = M.mem_id
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	<select id="bjArticleMenu" parameterType="Article" resultType="Article">
		SELECT *
		FROM (
		    SELECT ROWNUM RN, TEMP.*, M.mem_nickname, M.mem_image
		    FROM (
		        SELECT A.*, NVL(R.REP_CNT, 0) AS REP_CNT
		        FROM ARTICLE A
		        LEFT OUTER JOIN (
		            SELECT ART_ID, BRD_ID, COUNT(*) REP_CNT 
		            FROM REPLY 
		            WHERE BRD_ID = #{brd_id}
		            GROUP BY ART_ID, BRD_ID
		        ) R ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID) 
		        WHERE A.BRD_ID = #{brd_id}
		        AND A.isdelete = 0 
		        ORDER BY A.ART_ID DESC
		    ) TEMP
		    INNER JOIN member M ON TEMP.mem_id = M.mem_id
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>

	<select id="bjdetailContent"  parameterType="Article" resultType="Article">
		SELECT a.*, m.mem_nickname, m.mem_image
			FROM article a
			INNER JOIN member m ON a.mem_id = m.mem_id
		WHERE a.art_id = #{art_id} AND a.brd_id = #{brd_id}	AND a.isdelete = 0
	</select>
	
	<update id="bjreadCount" parameterType="Article" >
		UPDATE article
		SET art_read = art_read + 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id} AND isdelete = 0
	</update>
	
	<insert id="bjWriteArticle" parameterType="Article">
    INSERT INTO ARTICLE (ART_ID, BRD_ID, ART_TITLE, MEM_ID, ART_REGDATE, ART_CONTENT,
							 ART_TAG1, ART_TAG2, ART_TAG3, ART_TAG4, ART_TAG5, TRD_ID, ART_GOOD,
							 ART_BAD, ART_READ, ART_ISNOTICE, ISDELETE, REPORT_ID)
		VALUES ((SELECT MAX(ART_ID) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), #{brd_id},
				#{art_title, jdbcType=VARCHAR}, #{mem_id}, SYSDATE, #{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}, #{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, NULL,
				0, 0, 0, 0, 0, NULL)
	</insert>
	
	<update id="bjUpdate" parameterType="Article">
		UPDATE article
		  SET
		    art_title = #{art_title},
		    art_tag1 = #{art_tag1},
		    art_tag2 = #{art_tag2},
		    art_tag3 = #{art_tag3},
		    art_tag4 = #{art_tag4},
		    art_tag5 = #{art_tag5},
		    art_content = #{art_content}
		WHERE  art_id = #{art_id} AND brd_id = #{brd_id}   
	</update>
	<update id="bjDelete" parameterType="Article">
		UPDATE article
		  SET
		  	isdelete = 1
		WHERE art_id=#{art_id} AND brd_id = #{brd_id}
	</update>
	
	
	
	
	
	
</mapper>