<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java501.S20230401.model.ArticleMapper">

	<!-- 유현규 -->
	<insert id="hgInsertArticle" parameterType="Article">
		INSERT INTO ARTICLE (ART_ID, BRD_ID, ART_TITLE, MEM_ID, ART_REGDATE, ART_CONTENT,
							 ART_TAG1, ART_TAG2, ART_TAG3, ART_TAG4, ART_TAG5, TRD_ID, ART_GOOD,
							 ART_BAD, ART_READ, ART_ISNOTICE, ISDELETE, REPORT_ID)
		VALUES ((SELECT MAX(ART_ID) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), #{brd_id},
				#{art_title, jdbcType=VARCHAR}, #{mem_id}, SYSDATE, #{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}, #{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, NULL,
				0, 0, 0, 0, 0, NULL)
	</insert>
	<select id="hgGetArticleById" parameterType="Article" resultType="Article">
		SELECT * FROM ARTICLE
		WHERE ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</select>
	
	
	<!-- 양동균 -->
	<resultMap type="Article" id="dgArticleMap">
		<id 	column="art_id" 		property="art_id"/> <!-- PK	 -->
		<id 	column="brd_id" 		property="brd_id"/>	<!-- PK -->
		<result column="art_title" 		property="art_title"/>
		<result column="mem_id" 		property="mem_id"/>
		<result column="art_regdate" 	property="art_regdate"/>
		<result column="art_content" 	property="art_content"/>
		<result column="art_tag1" 		property="art_tag1"/>
		<result column="art_tag2" 		property="art_tag2"/>
		<result column="art_tag3" 		property="art_tag3"/>
		<result column="art_tag4" 		property="art_tag4"/>
		<result column="art_tag5" 		property="art_tag5"/>
		<result column="trd_id" 		property="trd_id"/>
		<result column="art_good" 		property="art_good"/>
		<result column="art_bad" 		property="art_bad"/>
		<result column="art_read" 		property="art_read"/>
		<result column="art_isnotice" 	property="art_isnotice"/>
		<result column="isdelete" 		property="isdelete"/>
		<result column="report_id" 		property="report_id"/>
		<result column="gen_name" 		property="gen_name"/>
		<result column="brd_name" 		property="brd_name"/>
		<result column="status_name" 	property="status_name"/>
		<result column="rep_cnt" 		property="rep_cnt"/>
		<collection property="member" 	resultMap="com.java501.S20230401.model.MemberMapper.dgMemberMap"/>
		<collection property="board" 	resultMap="com.java501.S20230401.model.BoardMapper.dgBoardMap"/>
		<collection property="trade" 	resultMap="com.java501.S20230401.model.TradeMapper.dgTradeMap"/>
	</resultMap>
	
	<!-- 전체 카운트 -->
	<select id="dgAllArtCnt" resultType="int" parameterType="Article">
		SELECT 	COUNT(*)
		FROM 	ARTICLE
		WHERE 	BRD_ID 
		<choose>
			<when test="brd_id == 999">
				BETWEEN #{brd_id} and #{brd_id}+600
			</when>
			<when test="brd_id % 100 != 0">
				= #{brd_id}
			</when>
			<otherwise>
				BETWEEN #{brd_id} and #{brd_id}+99
			</otherwise>
		</choose>
		AND		ISDELETE = 0
	</select>

	<!-- 전체 조회 -->
	<select id="dgAllArticleList" resultMap="dgArticleMap" parameterType="Article">
		SELECT  *
		FROM    (SELECT ROWNUM AS RN, J.*
		         FROM   (SELECT *
		                 FROM ( SELECT  *
		                        FROM    ARTICLE A
		                        JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
		                                    FROM    BOARD B JOIN COMM C1
		                                    ON      BRD_ID IN COMM_ID
		                                 )USING(BRD_ID)
		                        JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
		                                    FROM    MEMBER M JOIN COMM C2
		                                    ON      MEM_GENDER IN COMM_ID
		                                 )USING(MEM_ID)
				                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
				                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
				                                        ON      T.TRD_STATUS = C3.COMM_ID
				                                        LEFT OUTER JOIN REGION R
				                                        ON      T.REG_ID = R.REG_ID
				                         )USING(TRD_ID)
		                        LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
		                                                FROM 	REPLY
		                                                WHERE 	ISDELETE = 0
		                                                GROUP BY(ART_ID, BRD_ID)
		                                            )USING(BRD_ID, ART_ID)
                                WHERE 	A.ISDELETE = 0
		                       )
		                 WHERE      BRD_ID <choose>
		                 						<when test="brd_id == 999">
													BETWEEN #{brd_id} and #{brd_id}+600
												</when>
												<when test="brd_id % 100 != 0">
													= #{brd_id}
												</when>
												<otherwise>
													BETWEEN #{brd_id} and #{brd_id}+99
												</otherwise>
											</choose>
		                 ORDER BY   ART_REGDATE DESC) J)
		WHERE 	RN BETWEEN #{start} and #{end}
	</select>

	<!-- 게시글 조회 -->
	<select id="dgDetailShareArticle" resultMap="dgArticleMap" parameterType="Article">
		SELECT  *
		FROM   (SELECT *
		        FROM    ARTICLE A
                JOIN    (   SELECT  C1.COMM_VALUE AS BRD_NAME, B.*
                            FROM    BOARD B JOIN COMM C1
                            ON      BRD_ID IN COMM_ID
                        )USING(BRD_ID)
                JOIN	(   SELECT  C2.COMM_VALUE AS GEN_NAME, M.*
                            FROM    MEMBER M JOIN COMM C2
                            ON      MEM_GENDER IN COMM_ID
                        )USING(MEM_ID)
                LEFT OUTER JOIN 	(   SELECT  C3.COMM_VALUE AS STATUS_NAME, T.*, R.REG_NAME
                                        FROM    TRADE T LEFT OUTER JOIN COMM C3
                                        ON      T.TRD_STATUS = C3.COMM_ID
                                        LEFT OUTER JOIN REGION R
                                        ON      T.REG_ID = R.REG_ID
                         )USING(TRD_ID)
                LEFT OUTER JOIN    (    SELECT 	COUNT(*) AS REP_CNT, ART_ID, BRD_ID
                                        FROM 	REPLY
                                        WHERE 	ISDELETE = 0
                                        GROUP BY(ART_ID, BRD_ID)
                                    )USING(BRD_ID, ART_ID)
                WHERE 	A.ISDELETE = 0
		        )
		WHERE   ART_ID = #{art_id} AND BRD_ID = #{brd_id}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="dgReadShareArticle" parameterType="Article">
		UPDATE  ARTICLE
		SET     ART_READ = ART_READ+1
		WHERE   ART_ID = #{art_id}
		AND     BRD_ID = #{brd_id}
	</update>

	<!-- 게시글 작성 프로시저 -->
	<insert id="dgWriteShareArticle" parameterType="Article" statementType="CALLABLE">
		{
			call dgWriteShare(
				#{trade.trd_status,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_max,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_enddate,mode=IN, 	jdbcType=DATE},
				#{trade.trd_cost,	mode=IN, 	jdbcType=INTEGER},
				#{trade.reg_id,	    mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_loc,	mode=IN, 	jdbcType=VARCHAR},
				#{trade.trd_gender,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_minage,	mode=IN, 	jdbcType=INTEGER},
				#{trade.trd_maxage,	mode=IN, 	jdbcType=INTEGER},
				#{brd_id,	        mode=IN, 	jdbcType=INTEGER},
				#{mem_id,	        mode=IN, 	jdbcType=INTEGER},
				#{art_title,	    mode=IN, 	jdbcType=VARCHAR},
				#{art_content,	    mode=IN, 	jdbcType=CLOB},
				#{art_tag1,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag2,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag3,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag4,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_tag5,	        mode=IN, 	jdbcType=VARCHAR},
				#{art_good,	        mode=IN, 	jdbcType=INTEGER},
				#{art_bad,	        mode=IN, 	jdbcType=INTEGER},
				#{art_read,	        mode=IN, 	jdbcType=INTEGER},
				#{art_isnotice,	    mode=IN, 	jdbcType=INTEGER},
				#{isdelete,	        mode=IN, 	jdbcType=INTEGER}
			)
		}
	</insert>

	
	
	
	
	
	<!-- 백준 -->
	<select id="bjarticleIndex" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM ARTICLE
		WHERE
		<![CDATA[
			brd_id >= #{brd_id} AND brd_id < #{brd_id} + 100
		]]>
	</select>
	<select id="bjarticlePart" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM ARTICLE
		WHERE brd_id = #{brd_id}
	</select>
	
	<select id="bjarticleIndexAll" parameterType="Article" resultType="Article">
		SELECT *
		FROM (
		    SELECT ROWNUM RN, TEMP.*, M.mem_nickname, M.mem_image
		    FROM (
		        SELECT A.*, NVL(R.REP_CNT, 0) AS REP_CNT
		        FROM ARTICLE A
		        LEFT OUTER JOIN (
		            SELECT ART_ID, BRD_ID, COUNT(*) REP_CNT 
		            FROM REPLY 
		            WHERE BRD_ID BETWEEN 1300 AND 1399
		            GROUP BY ART_ID, BRD_ID
		        ) R ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID) 
		        WHERE A.BRD_ID BETWEEN 1300 AND 1399
		        AND A.isdelete = 0 
		        ORDER BY A.ART_ID DESC
		    ) TEMP
		    INNER JOIN member M ON TEMP.mem_id = M.mem_id
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	<select id="bjArticleMenu" parameterType="Article" resultType="Article">
		SELECT *
		FROM (
		    SELECT ROWNUM RN, TEMP.*, M.mem_nickname, M.mem_image
		    FROM (
		        SELECT A.*, NVL(R.REP_CNT, 0) AS REP_CNT
		        FROM ARTICLE A
		        LEFT OUTER JOIN (
		            SELECT ART_ID, BRD_ID, COUNT(*) REP_CNT 
		            FROM REPLY 
		            WHERE BRD_ID = #{brd_id}
		            GROUP BY ART_ID, BRD_ID
		        ) R ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID) 
		        WHERE A.BRD_ID = #{brd_id}
		        AND A.isdelete = 0 
		        ORDER BY A.ART_ID DESC
		    ) TEMP
		    INNER JOIN member M ON TEMP.mem_id = M.mem_id
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>

	<select id="bjdetailContent"  parameterType="Article" resultType="Article">
		SELECT a.*, m.mem_nickname, m.mem_image
			FROM article a
			INNER JOIN member m ON a.mem_id = m.mem_id
		WHERE a.art_id = #{art_id} AND a.brd_id = #{brd_id}	AND a.isdelete = 0
	</select>
	
	<update id="bjreadCount" parameterType="Article" >
		UPDATE article
		SET art_read = art_read + 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id} AND isdelete = 0
	</update>
	
	<insert id="bjWriteArticle" parameterType="Article">
    INSERT INTO ARTICLE (ART_ID, BRD_ID, ART_TITLE, MEM_ID, ART_REGDATE, ART_CONTENT,
							 ART_TAG1, ART_TAG2, ART_TAG3, ART_TAG4, ART_TAG5, TRD_ID, ART_GOOD,
							 ART_BAD, ART_READ, ART_ISNOTICE, ISDELETE, REPORT_ID)
		VALUES ((SELECT MAX(ART_ID) + 1 FROM ARTICLE WHERE BRD_ID = #{brd_id}), #{brd_id},
				#{art_title, jdbcType=VARCHAR}, #{mem_id}, SYSDATE, #{art_content, jdbcType=VARCHAR},
				#{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}, #{art_tag3, jdbcType=VARCHAR},
				#{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, NULL,
				0, 0, 0, 0, 0, NULL)
	</insert>
	
	<update id="bjUpdate" parameterType="Article">
		UPDATE article
		  SET
		    art_title = #{art_title},
		    art_tag1 = #{art_tag1},
		    art_tag2 = #{art_tag2},
		    art_tag3 = #{art_tag3},
		    art_tag4 = #{art_tag4},
		    art_tag5 = #{art_tag5},
		    art_content = #{art_content}
		WHERE  art_id = #{art_id} AND brd_id = #{brd_id}   
	</update>
	<update id="bjDelete" parameterType="Article">
		UPDATE article
		  SET
		  	isdelete = 1
		WHERE art_id=#{art_id} AND brd_id = #{brd_id}
	</update>
	
	
	
	
	
	
	
	
	
	<!-- 임동빈 -->
		<select id="ArticleTotalCnt" resultType="int">
		select 	Count(*) 
		FROM   	article 
		WHERE  	brd_id between 1010 and 1060
		AND    	isdelete = 0
	</select>

	<select id="ArticleBoardCnt" parameterType="Article"
		resultType="int">
		SELECT 	Count(*) 
		FROM 	article 
		WHERE 	brd_id=#{brd_id}
		AND 	isdelete = 0
	</select>


	<select id="tkArticleListAll" parameterType="Article" resultType="Article">
		SELECT * FROM (
		    SELECT ROWNUM RN, TT.*
		    FROM (
		           SELECT   A.ART_ID
		           		  , A.BRD_ID
		           		  , A.ART_TITLE
		           		  , A.MEM_ID
		           		  , A.ART_REGDATE
		           		  , A.ART_CONTENT
		           		  , A.ART_TAG1
		           		  , A.ART_TAG2
		           		  , A.ART_TAG3
		           		  , A.ART_TAG4
		           		  , A.ART_TAG5
		           		  , A.TRD_ID
		           		  , A.ART_GOOD
		           		  , A.ART_BAD
		           		  , A.ART_READ
		           		  , A.ART_ISNOTICE
		           		  , A.ISDELETE
		           		  , A.REPORT_ID
		           		  , M.MEM_USERNAME
		           		  , M.MEM_PASSWORD
		           		  , M.MEM_NICKNAME
		           		  , M.MEM_EMAIL
		           		  , M.MEM_TEL
		           		  , M.MEM_REGION1
		           		  , M.MEM_REGION2
		           		  , M.MEM_AUTHORITY
		           		  , M.MEM_REGDATE
		           		  , M.MEM_IMAGE
		           		  , M.MEM_GENDER
		           		  , M.MEM_NAME
		           		  , M.MEM_BIRTHDAY
		           		  , M.MEM_LATEST
		           		  , C1.COMM_ID 		as C1_COMM_ID
		           		  , C1.COMM_VALUE   as C1_COMM_VALUE
		           		  , C2.COMM_ID      as C2_COMM_ID
		           		  , C2.COMM_VALUE   as C2_COMM_VALUE
		           		  , R.REG_ID
		           		  , R.REG_NAME
		           		  , R.REG_PARENT
		           		  , T.TRD_STATUS
		           		  , T.TRD_MAX
		           		  , T.TRD_ENDDATE
		           		  , T.TRD_COST
		           		  , T.TRD_LOC
		           		  , T.TRD_GENDER
		           		  , T.TRD_MINAGE
		           		  , T.TRD_MAXAGE
		           		  , TRUNC(SYSDATE - A.ART_REGDATE) 			AS REST_REGDATE
		           		  , TO_CHAR(T.TRD_ENDDATE, 'YYYY-MM-DD') 	AS TRD_FINISH
		           		  , favorite_count(a.art_id, a.brd_id) 		AS favoriteCount
		           		  , reply_count(a.art_id, a.brd_id)			AS repCount
		            FROM ARTICLE A LEFT OUTER JOIN TRADE T ON(A.TRD_ID = T.TRD_ID)
		                           LEFT OUTER JOIN MEMBER M ON(A.MEM_ID = M.MEM_ID)
		                           LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                           LEFT OUTER JOIN COMM C2 ON(T.TRD_GENDER = C2.COMM_ID)
		                           LEFT OUTER JOIN REGION R ON(T.REG_ID = R.REG_ID)
		        	WHERE A.BRD_ID BETWEEN 1010 AND 1060
		            AND A.ISDELETE = 0
		        	ORDER BY A.ART_REGDATE DESC) TT)
		WHERE RN BETWEEN #{start} AND #{end}
			
	</select>

	<select id="tkArticleListBoard" parameterType="Article" resultType="Article">
		SELECT * FROM (
		    SELECT ROWNUM RN, TT.*
		    FROM (
		           SELECT   A.ART_ID
		           		  , A.BRD_ID
		           		  , A.ART_TITLE
		           		  , A.MEM_ID
		           		  , A.ART_REGDATE
		           		  , A.ART_CONTENT
		           		  , A.ART_TAG1
		           		  , A.ART_TAG2
		           		  , A.ART_TAG3
		           		  , A.ART_TAG4
		           		  , A.ART_TAG5
		           		  , A.TRD_ID
		           		  , A.ART_GOOD
		           		  , A.ART_BAD
		           		  , A.ART_READ
		           		  , A.ART_ISNOTICE
		           		  , A.ISDELETE
		           		  , A.REPORT_ID
		           		  , M.MEM_USERNAME
		           		  , M.MEM_PASSWORD
		           		  , M.MEM_NICKNAME
		           		  , M.MEM_EMAIL
		           		  , M.MEM_TEL
		           		  , M.MEM_REGION1
		           		  , M.MEM_REGION2
		           		  , M.MEM_AUTHORITY
		           		  , M.MEM_REGDATE
		           		  , M.MEM_IMAGE
		           		  , M.MEM_GENDER
		           		  , M.MEM_NAME
		           		  , M.MEM_BIRTHDAY
		           		  , M.MEM_LATEST
		           		  , C1.COMM_ID 		as C1_COMM_ID
		           		  , C1.COMM_VALUE   as C1_COMM_VALUE
		           		  , C2.COMM_ID      as C2_COMM_ID
		           		  , C2.COMM_VALUE   as C2_COMM_VALUE
		           		  , R.REG_ID
		           		  , R.REG_NAME
		           		  , R.REG_PARENT
		           		  , T.TRD_STATUS
		           		  , T.TRD_MAX
		           		  , T.TRD_ENDDATE
		           		  , T.TRD_COST
		           		  , T.TRD_LOC
		           		  , T.TRD_GENDER
		           		  , T.TRD_MINAGE
		           		  , T.TRD_MAXAGE
		           		  , TRUNC(SYSDATE - A.ART_REGDATE) AS REST_REGDATE
		           		  , TO_CHAR(T.TRD_ENDDATE, 'YYYY-MM-DD') 	AS TRD_FINISH
		           		  , favorite_count(a.art_id, a.brd_id) 		AS favoriteCount
		           		  , reply_count(a.art_id, a.brd_id)			AS repCount
		            FROM ARTICLE A LEFT OUTER JOIN TRADE T ON(A.TRD_ID = T.TRD_ID)
		                           LEFT OUTER JOIN MEMBER M ON(A.MEM_ID = M.MEM_ID)
		                           LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                           LEFT OUTER JOIN COMM C2 ON(T.TRD_GENDER = C2.COMM_ID)
		                           LEFT OUTER JOIN REGION R ON(T.REG_ID = R.REG_ID)
		        	WHERE A.BRD_ID = #{brd_id}
		            AND A.ISDELETE = 0
		        	ORDER BY A.ART_REGDATE DESC) TT)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>


	<select id="tkArticleDetail" parameterType="Article" resultType="Article">
        SELECT  		  a.*
        				, m.*
        				, r.*
        				, reply_count(A.ART_ID, A.BRD_ID)   	AS repCount
        		   		, t.trd_id
        		   		, t.trd_status
        		   		, t.trd_max
        		   		, trunc(sysdate - a.art_regdate)    	AS rest_regdate
            	   		, t.trd_cost
            	   		, t.trd_loc
            	   		, t.trd_gender
            	   		, t.trd_enddate
            	   		, t.trd_minage
            	   		, t.trd_maxage
            	   		, C1.COMM_ID 							AS C1_COMM_ID
		           		, C1.COMM_VALUE   						AS C1_COMM_VALUE
		           		, C2.COMM_ID      						AS C2_COMM_ID
		           		, C2.COMM_VALUE   						AS C2_COMM_VALUE
            	   		, to_char(t.trd_enddate, 'YYYY-MM-DD') 	AS trd_finish
            	   		, favorite_count(a.art_id, a.brd_id) 	AS favoriteCount
        FROM    	article a 		LEFT JOIN trade  t 	ON (A.TRD_ID = T.TRD_ID)
                          			LEFT JOIN member m  ON (a.mem_id = m.mem_id)
		                            LEFT OUTER JOIN COMM C1 ON(T.TRD_STATUS = C1.COMM_ID)
		                            LEFT OUTER JOIN COMM C2 ON(T.TRD_GENDER = C2.COMM_ID)
                          			LEFT JOIN REGION R  ON(t.reg_id = r.reg_id)
        WHERE 		a.brd_id = #{brd_id}
		AND 		a.art_id = #{art_id}
		AND			a.isdelete = 0
        ORDER BY 	a.brd_id
	</select>
	
<!-- 	<select id="tkFavoriteCount" parameterType="Article" resultType="int">
		select      count(*)
		from        favorite f left Join article a on(a.art_id = f.art_id and a.brd_id = f.brd_id)
                       		   left join member  m on(f.mem_id = m.mem_id)
        where		a.art_id = #{art_id}
		and			a.brd_id = #{brd_id}
		group by    a.art_id, a.brd_id
	</select> -->

	<select id="tkReplyList" parameterType="Article" resultType="Article">
		SELECT        r.*
					, a.*
					, m.*
		FROM        reply r LEFT JOIN article a ON(a.art_id = r.art_id  and a.brd_id = r.brd_id)
                    		LEFT JOIN member  m ON(r.mem_id = m.mem_id)
		WHERE 		a.brd_id = #{brd_id}
		AND   		a.art_id = #{art_id}
		AND			r.isdelete = 0
	</select>
	
	<select id = "insertArticle" statementType="CALLABLE" parameterType="Article">
		{
		call Insert_Article(
			1
			, 401
			, #{trd_max,       mode= IN,  jdbcType=NUMERIC}
			, #{trd_enddate,   mode= IN,  jdbcType=DATE}
			, #{trd_cost,      mode= IN,  jdbcType=NUMERIC}
			, #{reg_id,        mode= IN,  jdbcType=NUMERIC}
			, #{trd_loc,       mode= IN,  jdbcType=VARCHAR}
			, #{trd_gender,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_minage,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_maxage,    mode= IN,  jdbcType=NUMERIC} 
			, #{brd_id,        mode= IN,  jdbcType=NUMERIC}
			, #{art_title,     mode= IN,  jdbcType=VARCHAR}
			, #{art_content,   mode= IN,  jdbcType=VARCHAR}
			, #{art_tag1,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag2,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag3,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag4,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag5,      mode= IN,  jdbcType=VARCHAR}
			, #{insert_result, mode= OUT, jdbcType=NUMERIC})
		}
	</select>
<!-- 	<insert id ="insertTrade" parameterType="Article">
		insert into trade 
				values (trd_id_seq.nextval, 1, '401', #{trd_max}, #{trd_enddate}
				, 0, #{reg_id, jdbcType=NUMERIC}, #{trd_loc, jdbcType=VARCHAR}, #{trd_gender, jdbcType=NUMERIC}
				, #{trd_minage, jdbcType=NUMERIC}, #{trd_maxage, jdbcType=NUMERIC})
			<selectKey resultType="int" keyProperty="trd_id" order="AFTER">
				select trd_id_seq.currval from dual
			</selectKey>
	</insert> -->
	
	<!-- <insert id="insertArticle" parameterType="Article">
		insert into article 
			values ((Select max(art_id) + 1 from article where brd_id = #{brd_id})
            , #{brd_id}, #{art_title}, 1, sysdate, #{art_content, jdbcType=VARCHAR}, #{art_tag1, jdbcType=VARCHAR}, #{art_tag2, jdbcType=VARCHAR}
            , #{art_tag3, jdbcType=VARCHAR}, #{art_tag4, jdbcType=VARCHAR}, #{art_tag5, jdbcType=VARCHAR}, #{trd_id, jdbcType=NUMERIC}
            , 0, 0, 0, 0, 0, null)
	</insert> -->
	
 	<update id="deleteArticle" parameterType="Article">
		UPDATE article
		SET    isdelete = 1
		WHERE  brd_id = #{brd_id} 
		AND    art_id = #{art_id}
	</update>
	
<!-- 
 	<delete id="deleteTrade" parameterType="Article">
		Delete from Trade where trd_id = #{trd_id}
	</delete> -->
<!-- 	<update id= "updateTrade" parameterType="Article">
    	UPDATE 	 trade 
    	SET		 reg_id 		= #{reg_id}
    	   		,trd_loc 		= #{trd_loc}
    	   		,trd_minage 	= #{trd_minage}
    	   		,trd_maxage 	= #{trd_maxage}
    	   		,trd_enddate 	= #{trd_enddate}
    	WHERE 	 trd_id = #{trd_id}
	</update>
	
	<update id="updateArticle" parameterType="Article">
		UPDATE 		article 
		SET			brd_id 		= #{brd_id}
				   ,art_title 	= #{art_title}
				   ,art_content = #{art_content}
				   ,art_tag1 	= #{art_tag1}
				   ,art_tag2 	= #{art_tag2}
				   ,art_tag3 	= #{art_tag3}
				   ,art_tag4 	= #{art_tag4}
				   ,art_tag5 	= #{art_tag5} 
 		WHERE		art_id 		= #{art_id}
 		AND			brd_id 		= #{brd_id}
	</update> -->
	
	<select id="updateArticle" parameterType="Article" statementType="CALLABLE">
	{
		call Update_Article(
			  #{trd_id, 	   mode= IN,  jdbcType=NUMERIC}
			, 1
			, 401
			, #{trd_max,       mode= IN,  jdbcType=NUMERIC}
			, #{trd_enddate,   mode= IN,  jdbcType=DATE}
			, #{trd_cost,      mode= IN,  jdbcType=NUMERIC}
			, #{reg_id,        mode= IN,  jdbcType=NUMERIC}
			, #{trd_loc,       mode= IN,  jdbcType=VARCHAR}
			, #{trd_gender,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_minage,    mode= IN,  jdbcType=NUMERIC}
			, #{trd_maxage,    mode= IN,  jdbcType=NUMERIC}
			, #{art_id,		   mode= IN,  jdbcType=NUMERIC}
			, #{brd_id,        mode= IN,  jdbcType=NUMERIC}
			, #{art_title,     mode= IN,  jdbcType=VARCHAR}
			, #{art_content,   mode= IN,  jdbcType=VARCHAR}
			, #{art_tag1,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag2,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag3,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag4,      mode= IN,  jdbcType=VARCHAR}
			, #{art_tag5,      mode= IN,  jdbcType=VARCHAR}
			, #{insert_result, mode= OUT, jdbcType=NUMERIC})
		}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 김찬영 -->
	<!-- 리스트 조회-->
	<select id="ArticleTotal" resultType="int">
		select Count(*) FROM article
	</select>
	
	<!-- 페이지 불러오기 -->
	<select id="cyArticleListAll" parameterType="Article" resultType="Article">
		<![CDATA[
		
		SELECT *
		FROM
		(
		    SELECT rownum rn, a.*
		    FROM
		        (SELECT * FROM article WHERE brd_id >= 1400 AND brd_id < 1500 ORDER BY art_id) a
		)
			WHERE rn >= #{start}
			and   rn <= #{end}
		]]>
	</select>

	
	<!-- 상세페이지 불러오기 -->
	<select id="cyArticlereadDetail" parameterType="Article" resultType="Article">
			select *
			from article a
			left join member m 
			on a.mem_id = m.mem_id
			where a.art_id=#{art_id} and a.brd_id = #{brd_id}
	</select>
	<!-- 조회 -->
	<select id="count" resultType="int">
	 select count(brd_id) from article
	</select>

	<!-- 게시글 작성 -->
 	<insert id="cyArticleinsert" parameterType="Article">
		insert into 
			article(art_id, brd_id, art_title, art_tag1, art_content)
			values((Select max(art_id) + 1 from article where brd_id = #{brd_id}), #{brd_id}, #{art_title}, #{art_content}, #{art_content})
	</insert> 
	
		<!-- 게시글 작성 -->
   	<insert id="cyArticlewrite" parameterType="Article">
		insert into 
			article(brd_id, art_title, art_tag1, art_content)
			values(#{brd_id}, #{art_title}, #{art_content}, #{art_content})
	</insert>  

	<!-- 수정페이지 불러오기 -->
	<select id="cyArticlereadupdate" parameterType="Article" resultType="Article">
			select *
			from article 
			where art_id=#{art_id} and brd_id = #{brd_id}
	</select>
 
    	<!-- 글 수정하기 -->
	 <update id = "cyArticlemodify" parameterType="Article">
			update article 
		set 
			art_id = #{art_id, jdbcType=VARCHAR},
			art_title = #{art_title, jdbcType=VARCHAR},
			art_tag1 = #{art_tag1, jdbcType=VARCHAR},
			art_tag2 = #{art_tag2, jdbcType=VARCHAR},
			art_tag3 = #{art_tag3, jdbcType=VARCHAR},
			art_tag4 = #{art_tag4, jdbcType=VARCHAR},
			art_tag5 = #{art_tag5, jdbcType=VARCHAR},
			art_content = #{art_content, jdbcType=CLOB} 
		where art_id = #{art_id, jdbcType=NUMERIC} and brd_id = #{brd_id, jdbcType=NUMERIC}
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 최승환 -->
	<select id="shCustomerCount" resultType="int" parameterType="int">
	<![CDATA[
		SELECT Count(*)
		FROM article
		WHERE brd_id BETWEEN #{brd_id} AND #{brd_id}+99
 	 ]]>	
	</select>
	
	<select id="shListCustomer" parameterType="Article" resultType="Article">
	 <![CDATA[
		SELECT *
  		FROM 
  			(
    		SELECT ROWNUM RN, A.*, M.MEM_NICKNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT
    		FROM ARTICLE A
    		LEFT JOIN MEMBER M ON A.MEM_ID = M.MEM_ID
    		LEFT JOIN	(
      					SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
      					FROM REPLY
      					GROUP BY ART_ID, BRD_ID
    				 	) R
    		ON A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID
    		WHERE A.BRD_ID >= 1500 AND A.BRD_ID < 1600 and A.isdelete=0
    		ORDER BY A.ART_ID DESC
  			)
  		WHERE RN BETWEEN #{start} AND #{end} AND isdelete=0
 	 ]]>	
	</select>
	
	<select id="shListCustomerMenu" parameterType="Article" resultType="Article">
	 <![CDATA[
		SELECT *
  		FROM 
  			(
    		SELECT ROWNUM RN, A.*, M.MEM_NICKNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT
    		FROM ARTICLE A
    		LEFT JOIN MEMBER M ON A.MEM_ID = M.MEM_ID
    		LEFT JOIN 
    			(
      			SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
      			FROM REPLY
      			GROUP BY ART_ID, BRD_ID
    			) R
    		ON A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID
    		WHERE A.BRD_ID = #{brd_id} and A.isdelete=0
    		ORDER BY A.ART_ID DESC
  			)
  		WHERE RN BETWEEN #{start} AND #{end} AND isdelete=0
 	 ]]>	
	</select>
		
	<select id="shCustomerDetail" parameterType="Article" resultType="Article">
	  <![CDATA[
        	 SELECT A.*, M.MEM_NICKNAME, M.MEM_IMAGE, NVL(R.REP_COUNT, 0) REP_COUNT
			 FROM ARTICLE A
			 LEFT JOIN MEMBER M ON A.MEM_ID = M.MEM_ID
			 LEFT JOIN (SELECT ART_ID, BRD_ID, COUNT(*) REP_COUNT
			 	 		FROM REPLY
			 	 		GROUP BY ART_ID, BRD_ID) R
			 	 		ON (A.ART_ID = R.ART_ID AND A.BRD_ID = R.BRD_ID)
			 	 		WHERE A.ART_ID = #{art_id} AND A.BRD_ID = #{brd_id} and A.isdelete=0
	  ]]>
	</select>
	
	<insert id="shInsertCustomer" parameterType="Article">
    INSERT INTO article (art_id, brd_id, art_title, mem_id, art_content, art_regdate, art_tag1, art_tag2, art_tag3, art_tag4, art_tag5, art_good, art_bad, art_read, art_isnotice, isdelete) 
    VALUES ((Select max(art_id) + 1 from article where brd_id = #{brd_id}), #{brd_id}, #{art_title}, #{mem_id}, #{art_content}, SYSDATE, #{art_tag1}, #{art_tag2}, #{art_tag3}, #{art_tag4}, #{art_tag5}, 0, 0, 0, 0, 0)
	</insert>
	
	<update id="shCustomerUpdate" parameterType="Article">
		UPDATE article
		SET 
			art_title = #{art_title}, 
			art_content = #{art_content}, 
			art_tag1 = #{art_tag1, jdbcType = VARCHAR}, 
			art_tag2 = #{art_tag2, jdbcType = VARCHAR}, 
			art_tag3 = #{art_tag3, jdbcType = VARCHAR}, 
			art_tag4 = #{art_tag4, jdbcType = VARCHAR}, 
			art_tag5 = #{art_tag5, jdbcType = VARCHAR}
		WHERE brd_id = #{brd_id} AND art_id = #{art_id}
	</update>
	
	<update id="shDeleteCustomer" parameterType="Article">
		UPDATE article
		SET isdelete = 1
		WHERE art_id = #{art_id} AND brd_id = #{brd_id}
	</update>
	
</mapper>